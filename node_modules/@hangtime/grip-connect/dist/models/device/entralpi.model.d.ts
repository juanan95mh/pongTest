import { Device } from "../device.model.js";
import type { IEntralpi } from "../../interfaces/device/entralpi.interface.js";
/**
 * Represents a Entralpi device.
 * {@link https://entralpi.com}
 */
export declare class Entralpi extends Device implements IEntralpi {
    constructor();
    /**
     * Retrieves battery or voltage information from the device.
     * @returns {Promise<string | undefined>} A Promise that resolves with the battery or voltage information.
     */
    battery: () => Promise<string | undefined>;
    /**
     * Retrieves IEEE 11073-20601 Regulatory Certification from the device.
     * @returns {Promise<string>} A Promise that resolves with the certification.
     */
    certification: () => Promise<string | undefined>;
    /**
     * Retrieves firmware version from the device.
     * @returns {Promise<string>} A Promise that resolves with the firmware version.
     */
    firmware: () => Promise<string | undefined>;
    /**
     * Handles data received from the device, processes weight measurements,
     * and updates mass data including maximum and average values.
     * It also handles command responses for retrieving device information.
     *
     * @param {BluetoothRemoteGATTCharacteristic} characteristic - The notification event.
     */
    handleNotifications: (characteristic: BluetoothRemoteGATTCharacteristic) => void;
    /**
     * Retrieves hardware version from the device.
     * @returns {Promise<string>} A Promise that resolves with the hardware version.
     */
    hardware: () => Promise<string | undefined>;
    /**
     * Retrieves manufacturer information from the device.
     * @returns {Promise<string>} A Promise that resolves with the manufacturer information.
     */
    manufacturer: () => Promise<string | undefined>;
    /**
     * Retrieves model number from the device.
     * @returns {Promise<string>} A Promise that resolves with the model number.
     */
    model: () => Promise<string | undefined>;
    /**
     * Retrieves PnP ID from the device, a set of values that used to create a device ID value that is unique for this device.
     * Included in the characteristic is a Vendor ID Source field, a Vendor ID field, a Product ID field and a Product Version field
     * @returns {Promise<string>} A Promise that resolves with the PnP ID.
     */
    pnp: () => Promise<string | undefined>;
    /**
     * Retrieves software version from the device.
     * @returns {Promise<string>} A Promise that resolves with the software version.
     */
    software: () => Promise<string | undefined>;
    /**
     * Retrieves system id from the device.
     * @returns {Promise<string>} A Promise that resolves with the system id.
     */
    system: () => Promise<string | undefined>;
}
