import { Device } from "../device.model.js";
import type { IForceBoard } from "../../interfaces/device/forceboard.interface.js";
/**
 * Represents a PitchSix Force Board device.
 * {@link https://pitchsix.com}
 */
export declare class ForceBoard extends Device implements IForceBoard {
    constructor();
    /**
     * Retrieves battery or voltage information from the device.
     * @returns {Promise<string | undefined>} A Promise that resolves with the battery or voltage information,
     */
    battery: () => Promise<string | undefined>;
    /**
     * Handles data received from the device, processes weight measurements,
     * and updates mass data including maximum and average values.
     * It also handles command responses for retrieving device information.
     *
     * @param {BluetoothRemoteGATTCharacteristic} characteristic - The notification event.
     */
    handleNotifications: (characteristic: BluetoothRemoteGATTCharacteristic) => void;
    /**
     * Retrieves humidity level from the device.
     * @returns {Promise<string>} A Promise that resolves with the humidity level,
     */
    humidity: () => Promise<string | undefined>;
    /**
     * Retrieves manufacturer information from the device.
     * @returns {Promise<string>} A Promise that resolves with the manufacturer information,
     */
    manufacturer: () => Promise<string | undefined>;
    /**
     * Stops the data stream on the specified device.
     * @returns {Promise<void>} A promise that resolves when the stream is stopped.
     */
    stop: () => Promise<void>;
    /**
     * Starts streaming data from the specified device.
     * @param {number} [duration=0] - The duration of the stream in milliseconds. If set to 0, stream will continue indefinitely.
     * @returns {Promise<void>} A promise that resolves when the streaming operation is completed.
     */
    stream: (duration?: number) => Promise<void>;
    /**
     * Retrieves temperature information from the device.
     * @returns {Promise<string>} A Promise that resolves with the manufacturer information,
     */
    temperature: () => Promise<string | undefined>;
}
