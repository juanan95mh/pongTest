"use strict";
/*
* Node Web Bluetooth
* Copyright (c) 2017 Rob Moran
*
* The MIT License (MIT)
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BluetoothDeviceImpl = void 0;
var server_1 = require("./server");
var events_1 = require("./events");
/**
 * Bluetooth Device class
 */
var BluetoothDeviceImpl = /** @class */ (function (_super) {
    __extends(BluetoothDeviceImpl, _super);
    /**
     * Device constructor
     * @param init A partial class to initialise values
     */
    function BluetoothDeviceImpl(init, forgetFn) {
        var _this = _super.call(this) || this;
        _this.forgetFn = forgetFn;
        /**
         * The unique identifier of the device
         */
        _this.id = undefined;
        /**
         * The name of the device
         */
        _this.name = undefined;
        /**
         * The gatt server of the device
         */
        _this.gatt = undefined;
        /**
         * Whether adverts are being watched (not implemented)
         */
        _this.watchingAdvertisements = false;
        /**
         * @hidden
         */
        _this._bluetooth = undefined;
        /**
         * @hidden
         */
        _this._allowedServices = [];
        /**
         * @hidden
         */
        _this._serviceUUIDs = [];
        _this.id = init.id;
        _this.name = init.name;
        _this.gatt = init.gatt;
        _this._adData = init._adData;
        _this._bluetooth = init._bluetooth;
        _this._allowedServices = init._allowedServices;
        _this._serviceUUIDs = init._serviceUUIDs;
        if (!_this.name)
            _this.name = "Unknown or Unsupported Device (".concat(_this.id, ")");
        if (!_this.gatt)
            _this.gatt = new server_1.BluetoothRemoteGATTServerImpl(_this);
        return _this;
    }
    Object.defineProperty(BluetoothDeviceImpl.prototype, "oncharacteristicvaluechanged", {
        set: function (fn) {
            if (this._oncharacteristicvaluechanged) {
                this.removeEventListener('characteristicvaluechanged', this._oncharacteristicvaluechanged);
                this._oncharacteristicvaluechanged = undefined;
            }
            if (fn) {
                this._oncharacteristicvaluechanged = fn;
                this.addEventListener('characteristicvaluechanged', this._oncharacteristicvaluechanged);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BluetoothDeviceImpl.prototype, "onserviceadded", {
        set: function (fn) {
            if (this._onserviceadded) {
                this.removeEventListener('serviceadded', this._onserviceadded);
                this._onserviceadded = undefined;
            }
            if (fn) {
                this._onserviceadded = fn;
                this.addEventListener('serviceadded', this._onserviceadded);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BluetoothDeviceImpl.prototype, "onservicechanged", {
        set: function (fn) {
            if (this._onservicechanged) {
                this.removeEventListener('servicechanged', this._onservicechanged);
                this._onservicechanged = undefined;
            }
            if (fn) {
                this._onservicechanged = fn;
                this.addEventListener('servicechanged', this._onservicechanged);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BluetoothDeviceImpl.prototype, "onserviceremoved", {
        set: function (fn) {
            if (this._onserviceremoved) {
                this.removeEventListener('serviceremoved', this._onserviceremoved);
                this._onserviceremoved = undefined;
            }
            if (fn) {
                this._onserviceremoved = fn;
                this.addEventListener('serviceremoved', this._onserviceremoved);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BluetoothDeviceImpl.prototype, "ongattserverdisconnected", {
        set: function (fn) {
            if (this._ongattserverdisconnected) {
                this.removeEventListener('gattserverdisconnected', this._ongattserverdisconnected);
                this._ongattserverdisconnected = undefined;
            }
            if (fn) {
                this._ongattserverdisconnected = fn;
                this.addEventListener('gattserverdisconnected', this._ongattserverdisconnected);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BluetoothDeviceImpl.prototype, "onadvertisementreceived", {
        set: function (fn) {
            if (this._onadvertisementreceived) {
                this.removeEventListener('advertisementreceived', this._onadvertisementreceived);
                this._onadvertisementreceived = undefined;
            }
            if (fn) {
                this._onadvertisementreceived = fn;
                this.addEventListener('advertisementreceived', this._onadvertisementreceived);
            }
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Starts watching adverts from this device (not implemented)
     */
    BluetoothDeviceImpl.prototype.watchAdvertisements = function () {
        throw new Error('watchAdvertisements error: method not implemented');
    };
    /**
     * Stops watching adverts from this device (not implemented)
     */
    BluetoothDeviceImpl.prototype.unwatchAdvertisements = function () {
        throw new Error('unwatchAdvertisements error: method not implemented');
    };
    /**
     * Forget this device
     */
    BluetoothDeviceImpl.prototype.forget = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.forgetFn();
                return [2 /*return*/];
            });
        });
    };
    return BluetoothDeviceImpl;
}(events_1.EventDispatcher));
exports.BluetoothDeviceImpl = BluetoothDeviceImpl;
//# sourceMappingURL=device.js.map